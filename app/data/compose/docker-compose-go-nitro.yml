version: '3.7'

services:
  go-nitro:
    image: cerc/go-nitro:local
    hostname: go-nitro
    restart: on-failure
    depends_on:
      # Wait for Nitro contracts to be deployed
      nitro-contracts:
        condition: service_completed_successfully
    environment:
      NITRO_CHAIN_URL: ${NITRO_CHAIN_URL:-ws://fixturenet-eth-geth-1:8546}
      NITRO_PK: ${NITRO_PK:-2d999770f7b5d49b694080f987b82bbc9fc9ac2b4dcc10b0f8aba7d700f69c6d}
      NITRO_CHAIN_PK: ${NITRO_CHAIN_PK:-570b909da9669b2f35a0b1ac70b8358516d55ae1b5b3710e95e9a94395090597}
      NITRO_USE_DURABLE_STORE: ${NITRO_USE_DURABLE_STORE:-true}
      NITRO_DURABLE_STORE_FOLDER: ${NITRO_DURABLE_STORE_FOLDER:-/app/data/nitro-store}
      CERC_NA_ADDRESS: ${CERC_NA_ADDRESS}
      CERC_VPA_ADDRESS: ${CERC_VPA_ADDRESS}
      CERC_CA_ADDRESS: ${CERC_CA_ADDRESS}
    entrypoint: ["bash", "-c", "/app/run-nitro-node.sh"]
    volumes:
      - go_nitro_data:/app/data
      - nitro_deployment:/app/deployment
      - ../config/go-nitro/run-nitro-node.sh:/app/run-nitro-node.sh
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "4005"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    ports:
      - "3005"
      - "4005"
      - "5005:5005"

volumes:
  go_nitro_data:
  nitro_deployment:
